name: Automated Release

on:
  push:
    branches:
      - main
    paths:
      - gemini-flow/package.json

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.version-check.outputs.changed }}
      new-version: ${{ steps.version-check.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(jq -r '.version' gemini-flow/package.json)
        PREVIOUS_VERSION=$(git show HEAD~1:gemini-flow/package.json | jq -r '.version')
        
        if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No version change detected"
        fi

  create-release:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        cache-dependency-path: gemini-flow/package-lock.json
    
    - name: Install dependencies
      working-directory: ./gemini-flow
      run: npm ci
    
    - name: Run tests
      working-directory: ./gemini-flow
      run: npm test
    
    - name: Build project
      working-directory: ./gemini-flow
      run: npm run build
    
    - name: Generate changelog
      id: changelog
      run: |
        echo "## Changes in v${{ needs.check-version.outputs.new-version }}" > changelog.md
        echo "" >> changelog.md
        
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          git log $LAST_TAG..HEAD --pretty=format:"- %s" >> changelog.md
        else
          git log --pretty=format:"- %s" >> changelog.md
        fi
        
        echo "" >> changelog.md
        echo "**Full Changelog**: https://github.com/clduab11/gemini-flow/compare/$LAST_TAG...v${{ needs.check-version.outputs.new-version }}" >> changelog.md
    
    - name: Create Git tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ needs.check-version.outputs.new-version }}" -m "Release v${{ needs.check-version.outputs.new-version }}"
        git push origin "v${{ needs.check-version.outputs.new-version }}"
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.check-version.outputs.new-version }}
        release_name: Release v${{ needs.check-version.outputs.new-version }}
        body_path: changelog.md
        draft: false
        prerelease: false
    
    - name: Publish to NPM
      working-directory: ./gemini-flow
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}